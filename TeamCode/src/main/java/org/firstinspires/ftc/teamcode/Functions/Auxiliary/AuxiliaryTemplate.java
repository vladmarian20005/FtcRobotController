package org.firstinspires.ftc.teamcode.Functions.Auxiliary;

import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.hardware.HardwareDevice;


public class AuxiliaryTemplate extends AuxiliaryFunction {


    /**
     * AUTHOR NOTES:
     * * To use this class to create a new class and write "extends AuxiliaryFunction" right after the class declaration. Example: public class YourClassName extends AuxiliaryFunction
     * * all of the necessary methods methods can be AUTOGENERATED by the editor, hover your mouse over the line "public class YourClassName extends AuxiliaryFunction" and press ALT+SHIFT+ENTER twice
     * * you can access all the DCMotors and servos using dcMotors.get(i) or servos.get(j) / getDcMotor(i) or getServo(j) / setDcMotorPower(i, power) or setServoPosition(i, power)
     * * DO NOT CALL ANY OF THESE METHODS FROM OpMode/LinearOpMode or other CLASSES!
     * *** USE THE FOLLOWING METHODS INSTEAD: Start(), StartReverse(), Stop(), Switch(), SwitchReverse(), SwitchAndWait(), SwitchAndWaitReverse()
     * * any modification in AuxiliaryFunction will update all the auxiliary functions
     * * if this class presents any problems during implementation contact the author (Durdeu Vlad) via messenger
     *
     *
     * This method initialises the motors and servos and separates them into two lists
     *
     * @param main            : put "this" here or a reference to the OpMode/LinearOpMode class;
     * @param hardwareDevices : dcMotors and servos in any order, you can put any HardwareDevice class here, but it will discard anything else
     */
    public AuxiliaryTemplate(OpMode main, HardwareDevice... hardwareDevices) {
        super(main, hardwareDevices);
    }

    @Override
    void StartCode() {
        // your code
        dcMotors.get(0).setPower(1);
        dcMotors.get(1).setPower(1);
        servos.get(0).setPosition(0.2);
    }

    @Override
    void StartReverseCode() {
        // your code
        // you can leave this empty if you don't have a use for it
    }

    @Override
    void StopCode() {
        // your code
        dcMotors.get(0).setPower(0);
        dcMotors.get(0).setPower(0);
        servos.get(0).setPosition(0);
    }


}
